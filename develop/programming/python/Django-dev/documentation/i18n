
--- ref ---
http://www.ibm.com/developerworks/cn/web/1101_jinjh_djangoi18n/
http://blog.csdn.net/wangeen/article/details/24088725
------------

zhiluba/markpoint$ mkdir locale

zhiluba/markpoint$ django-admin.py makemessages -l zh_CN
CommandError: Can't find xgettext. Make sure you have GNU gettext tools 0.15 or newer installed.

--- 安装 gettext ---
http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-0.18.1.1.tar.gz

tar xzvf gettext-0.18.1.1.tar.gz
cd gettext-0.18.1.1
./configure
make
sudo make install

或
apt-get install gettext
--------------------


$ django-admin.py makemessages -l zh_CN

processing locale zh_CN
CommandError: errors happened while running msguniq
msguniq: error while opening "/home/zhongxia/Documents/com/develop/zhiluba/web/zhiluba/markpoint/locale/django.pot" for reading: No such file or directory

--- 解决 ---
http://stackoverflow.com/questions/20802624/unable-to-generate-django-javascript-i18n-catalog
The problem was that there was no string to be translated (the error message could be better!). Adding a translatable string (e.g. {% trans 'dummy' %}) fixed it.

在template/index.html或其他页面中，任意加上一个可翻译字符串：
{% trans "Languages" %}
---------------

# 需要先在APP(view,template)中加上可翻译字符串，再执行此命令生成.po文件，
# 之后在.po文件中编辑翻译字符串。
$ django-admin.py makemessages -l zh_CN  

$ tree locale/
locale/
└── zh_CN
    └── LC_MESSAGES
        └── django.po            # 生成的文件

--- django.po ---

... ...

#: templates/markpoint/index.html:7
msgid "Languages"
msgstr ""
---------------------

# 编辑po文件后，编译生成".mo文件"
$ django-admin.py compilemessages

$ tree locale/
locale/
└── zh_CN
    └── LC_MESSAGES
        ├── django.mo
        └── django.po


模板中加入翻译

{% load i18n %} 


if not ('django.contrib.auth.context_processors.auth' in settings.TEMPLATE_CONTEXT_PROCESSORS or
            'django.core.context_processors.auth' in settings.TEMPLATE_CONTEXT_PROCESSORS):
            raise ImproperlyConfigured("Put 'django.contrib.auth.context_processors.auth' "
                "in your TEMPLATE_CONTEXT_PROCESSORS setting in order to use the admin application.")



-------- 国际化 (i18n)

zuqiua_site/home$ mkdir locale
zuqiua_site/home$ django-admin.py makemessages -l zh_CN
zuqiua_site/home$ vim locale/zh_CN/LC_MESSAGES/django.po
zuqiua_site/home$ django-admin.py compilemessages

(1) 创建目录
zuqiua_site/home$ mkdir locale
否则错误：
CommandError: This script should be run from the Django Git tree....
(2) 编辑view, templates, 添加{% load i18n %} 
至少加上一条可翻译字符串（trans "..."）,见 (6),(7),(8)
(3) 生成.po文件，包含翻译字符串
zuqiua_site/home$ django-admin.py makemessages -l zh_CN
(4) 编辑.po文件，进行翻译，并编译成.mo
zuqiua_site/home$ vim locale/zh_CN/LC_MESSAGES/django.po
zuqiua_site/home$ django-admin.py compilemessages
locale/
└── zh_CN
    └── LC_MESSAGES
        ├── django.mo
        └── django.po

(5) 添加语言模块
----- zuqiua/settings.py
MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # 不加这一项，中文将没有效果 
    ......
)

ugettext = lambda s: s

LANGUAGES = ( 
    ('en-us', ugettext('English')), 
    ('zh-CN', ugettext('Chinese')), 
) 

----- zuqiua/urls.py
url(r'^i18n/', include('django.conf.urls.i18n')),

----------- base.html
<head>
    ....
    <script  type="text/javascript"> 
            function selectdo(obj) { 
                        str="/i18n/setlang/"; 
                        myform = document.getElementById('langform'); 
                        myform.method = "POST"; 
                        myform.action = str; 
                        myform.submit(); 
            } 
    </script>
</head>
<body>
        <form name="langform" id="langform" method='post'> 
            {% csrf_token %}
            <select id="language" name="language" onchange="selectdo(this)"> 
                 <option value="1" >{% trans "Languages" %}</option> 
                 {% for lang in LANGUAGES %} 
                 <option value="{{ lang.0 }}" > {{ lang.1 }}</option> 
                 {% endfor %} 
            </select> 
        </form>

</body>

(6) templates翻译字符串
1) {% trans "xxxxx" %}                     # 直接的翻译字符串   
2) {% trans "add" as add_trans %}  # 定义变量
   引用 {{ add_trans }}"

(7) View中添加可翻译字符串
from django.utils.translation import ugettext as _ 
_('Monday'), _('Tuesday'), _('Wednesday'), _('Thursday'), _('Friday'), _('Saturday'), _('Sunday')

(8) Form中对model域的可翻译字符串
from django.utils.translation import ugettext_lazy as _lazy
    name = forms.CharField(label=_lazy('name'), max_length=30)
    name2 = forms.CharField(label=_lazy('name2'), max_length=30)

_lazy()失效，需使用ugettext_lazy() 才能识别?

(9) 需要在包含“#, fuzzy”的字符串处，删除“#, fuzzy”，才使翻译生效。

6. CSS (JavaScript, IMAGE) 路径设置

home/templates/home/base.html:6: <link rel="stylesheet" href="/site_media/css/base.css" type="text/css" />

zuqiua/urls.py:7:     site_media = os.path.join(os.path.dirname(__file__), 'site_media')
zuqiua/urls.py:18:    url(r'^site_media/(?P<path>.*)$', 'django.views.static.serve', {'document_root':site_media}),
