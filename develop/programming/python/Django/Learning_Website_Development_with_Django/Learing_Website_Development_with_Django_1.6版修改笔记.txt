

== Ch2

p19
DATABASE_NAME = 'bookmarksdb'
-->
'NAME': os.path.join(BASE_DIR, 'bookmarksdb.sqlite3')

== Ch3

p30 
INSTALLED_APPS = (
    'django_bookmarks.bookmarks',
)
-->
INSTALLED_APPS = (
    'bookmarks',
)

p33
maxlength=200 --> max_length=200

== Ch4

p46
<form method="post" action=".">
    {% csrf_token %}               -----------------------> 添加，否则出错403。
    <p><label for="id_username">Username:</label>

p59
self.clean_data['xxxx'] --> self.cleaned_data['xxx']


p61
<form method="post" action=".">
  {% csrf_token %}               -----------------------> 添加，否则出错403。
  {{ form.as_p }}

p63
#direct_to_template has been deprecated. In django 1.5 try using a Class based view in urls.py
from django.views.generic.simple import direct_to_template
--->
from django.views.generic import TemplateView
------------------------------------------------------
url(r'^register/success/$', direct_to_template, { 'template': 'registration/register_success.html' }),
--->
url(r'^register/success/$', TemplateView.as_view(template_name='registration/register_success.html'),
		{ 'template': 'registration/register_success.html' }),


== Ch5

p68
name = models.CharField(maxlength=64, unique=True)
--> 
name = models.CharField(max_length=64, unique=True)

p73
clean_data --> cleaned_data

p78
django.contrib.auth.LOGIN_URL = '/login/'  -->  LOGIN_URL = '/login/'

== Ch7

Django used to include a comments framework; 
since Django 1.6 it's been separated to a separate project. 
This is that project: https://github.com/django/django-contrib-comments

1. Install the comments app by running pip install django-contrib-comments.

2. Install the comments framework by adding 'django_comments' to INSTALLED_APPS.

adding 'django.contrib.sites'
adding SITE_ID=1 in setting.py

3. Run manage.py syncdb so that Django will create the comment tables.

4. Add the comment app’s URLs to your project’s urls.py:
urlpatterns = patterns('',
    ...
    (r'^comments/', include('django_comments.urls')),
    ...
)

p144
{% comment_form --> {% render_comment_form 

p145
action="/comments/post/"  --> action="/comments/posted/" 

== Ch8 

p150
(r'^admin/', include('django.contrib.admin.urls')),
-->
from django.contrib import admin
admin.autodiscover()
url(r'^admin/', include(admin.site.urls))

p150-151
--models.py
class Admin:
  pass
-->
--bookmarks/amdin.py
from django.contrib import admin
from bookmarks.models import *
# Register your models here.
admin.site.register(Link)
admin.site.register(Tag)
admin.site.register(Bookmark)
admin.site.register(SharedBookmark)

== Ch9

p165
from django.contrib.syndication.feeds import Feed
-->
from django.contrib.syndication.views import Feed

p166
feeds = {
'recent': RecentBookmarks
}
...
(r'^feeds/(?P<url>.*)/$', 'django.contrib.syndication.views.feed', {'feed_dict': feeds}),
-->
(r'^feeds/(?P<url>.*)/$', RecentBookmarks()),

p179
ObjectPaginator  -->  Paginator

p180
.get_page(page - 1)  -->  .page(page)

'show_paginator': paginator.pages > 1,
'has_prev': paginator.has_previous_page(page - 1),
'has_next': paginator.has_next_page(page - 1),
'page': page,
'pages': paginator.pages,
-->
'show_paginator': paginator.num_pages > 1,
'has_prev': bookmarks.has_previous(),
'has_next': bookmarks.has_next(),
'page': page,
'pages': paginator.num_pages,

== Ch10







