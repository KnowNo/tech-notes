
Memcached Wiki 四 使用 

1. 协议命令

Memcached处理少量的基本命令，完全文档可以在Protocal Document找到。

1.1. 标准协议 (Standard Protocol)
memcached标准协议内容("standard protocol stuff")包含运行一个命令项("item")。一个项包括：
。一个键(Key)（最多250字节长度的任意字符串，没有ASCII模式的空格或换行） 
。一个32位"flag"值
。一个超时时间，秒为单位。可以直到30天。30天后，被当成一个精确时间的unix时间戳
。一个64位"CAS"值，保持唯一
。任意数据

CAS是可选的(可以使用-C参数来完全禁止，并且有更多内部域构成项，但这是你的客户端交换用的)

No Reply

大多ASCII命令允许一个"noreply"版本。但使用ASCII协作不应该作为一般性来使用，因为不能分辨请求错误。目的是避免在执行一个命令(如set或add)后等待一个返回包。

二进制协议可能适当地实现了noreply(静默)命令。如果你有一个支持或使用二进制的客户端，你可能可以利用它。

1.2. 存储命令
set
最常见的命令。存储数据，可能覆盖已经存在的数据。新的数据项在LRU的顶部。

add
只有在数据不存在的情况下，存储数据。新的数据项在LRU的顶部。如果数据已经存在，add失败，但同时将存在的数据项置于LRU的前端。

replace
只在数据存在的情况下，存储数据。几乎不使用。

append
在已经存在的一个数据项的最后追加数据。不允许超出数据项限制。对于管理列表有用。

prepend
跟append类似，但是在数据前面追加。

cas 
Check And Set (or Compare And Swap). 一个存储数据的操作，但只在你最后读取后没有其他人更新过数据的情况下。在解决更新缓存冲突竞争条件时有用。

1.3. 获取命令
get
获取数据的命令。使用一个或多个keys，返回所有匹配的结果。

gets
使用CAS的get命令的一个替代，返回一个CAS确认数据项的标识(唯一的64位数)。同cas命令一起返回这个值。如果项的CAS值从你gets它起已经改变了，它将不会被存储。

1.4. 删除
从cache删除一个项，如果存在。

1.5. 增/减
增加和减少。如果一个存储的数据项是64位整数的字符串表示，你可用运行incr/decr来改变这个数。只能增减正数，负数不被接受。
如果数据不存在，执行失败。

1.6. 统计信息
有一些可用的命令能返回memcached服务器的计数和设置信息。这可通过一组工具来检查，或简单的通过telnet或netcat. 在protocol文档更多的解释。

stats 

1.7. flush_all 

2. 共通的客户端特性

3. 基本的Memcached使用

4. Memcached使用的FAQ

5. 编程HOWTO和技巧

6. 用于终端用户的Memcached内部细节





